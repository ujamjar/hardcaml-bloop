# OASIS_START
# DO NOT EDIT (digest: eca83daf811572264d15f20450f53ce9)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library HardCamlBloop
"src/HardCamlBloop.cmxs": use_HardCamlBloop
"src/expr.cmx": for-pack(HardCamlBloop)
"src/pcn.cmx": for-pack(HardCamlBloop)
"src/gates.cmx": for-pack(HardCamlBloop)
"src/bddx.cmx": for-pack(HardCamlBloop)
"src/sat.cmx": for-pack(HardCamlBloop)
<src/*.ml{,i,y}>: pkg_bdd
<src/*.ml{,i,y}>: pkg_hardcaml
<src/*.ml{,i,y}>: pkg_minisat
# Executable pcn_taut
<test/pcn_taut.{native,byte}>: pkg_bdd
<test/pcn_taut.{native,byte}>: pkg_hardcaml
<test/pcn_taut.{native,byte}>: pkg_minisat
<test/pcn_taut.{native,byte}>: use_HardCamlBloop
<test/pcn_taut.{native,byte}>: custom
# Executable pcn_compl
<test/pcn_compl.{native,byte}>: pkg_bdd
<test/pcn_compl.{native,byte}>: pkg_hardcaml
<test/pcn_compl.{native,byte}>: pkg_minisat
<test/pcn_compl.{native,byte}>: use_HardCamlBloop
<test/pcn_compl.{native,byte}>: custom
# Executable sat_const
<test/sat_const.{native,byte}>: pkg_bdd
<test/sat_const.{native,byte}>: pkg_hardcaml
<test/sat_const.{native,byte}>: pkg_minisat
<test/sat_const.{native,byte}>: use_HardCamlBloop
<test/sat_const.{native,byte}>: custom
# Executable sat_repair
<test/sat_repair.{native,byte}>: pkg_bdd
<test/sat_repair.{native,byte}>: pkg_hardcaml
<test/sat_repair.{native,byte}>: pkg_minisat
<test/sat_repair.{native,byte}>: use_HardCamlBloop
<test/sat_repair.{native,byte}>: custom
# Executable bdd_dynw
<test/bdd_dynw.{native,byte}>: pkg_bdd
<test/bdd_dynw.{native,byte}>: pkg_hardcaml
<test/bdd_dynw.{native,byte}>: pkg_minisat
<test/bdd_dynw.{native,byte}>: use_HardCamlBloop
<test/bdd_dynw.{native,byte}>: custom
# Executable bdd_adder
<test/bdd_adder.{native,byte}>: pkg_bdd
<test/bdd_adder.{native,byte}>: pkg_hardcaml
<test/bdd_adder.{native,byte}>: pkg_minisat
<test/bdd_adder.{native,byte}>: use_HardCamlBloop
<test/bdd_adder.{native,byte}>: custom
# Executable bdd_repair
<test/bdd_repair.{native,byte}>: pkg_bdd
<test/bdd_repair.{native,byte}>: pkg_hardcaml
<test/bdd_repair.{native,byte}>: pkg_minisat
<test/bdd_repair.{native,byte}>: use_HardCamlBloop
<test/*.ml{,i,y}>: pkg_bdd
<test/*.ml{,i,y}>: pkg_hardcaml
<test/*.ml{,i,y}>: pkg_minisat
<test/*.ml{,i,y}>: use_HardCamlBloop
<test/bdd_repair.{native,byte}>: custom
# OASIS_STOP
